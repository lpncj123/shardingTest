spring:
  sharding-sphere: # mode.type 默认是内存模式启动
    props:
      # 展示sql
      sql-show: true  # 打印sql，控制台可以看到执行的逻辑表sql，和真实表sql（5.0.0版本之前另一个参数）
    datasource:
      ds0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/shardingsphere0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT&allowPublicKeyRetrieval=true
        password: P@ssword123
        type: com.zaxxer.hikari.HikariDataSource
        username: root
      ds1:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/shardingsphere1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT&allowPublicKeyRetrieval=true
        password: P@ssword123
        type: com.zaxxer.hikari.HikariDataSource
        username: root
      names: ds0,ds1
    rules:
      sharding:
        sharding-algorithms:
          t-problem-db-inline: # 名为 t-problem-db-inline 的分库策略的算法
            props:
              algorithm-expression: ds$->{id % 2}
            type: INLINE
          t-problem-table-inline: # 名为 t-problem-table-inline 的分表策略的算法
            props:
              algorithm-expression: t_problem$->{id % 3}
            type: INLINE
        tables:
          t_problem:
            actual-data-nodes: ds$->{0..1}.t_problem$->{0..2}
            database-strategy: # 分库策略
              standard: # 用于单分片键的标准分片场景，（多个列标识区分是复杂情况，将standard换成 complex（即分片列名称，多个列以逗号分隔））
                sharding-algorithm-name: t-problem-db-inline # 名称，在上面使用
                sharding-column: id # 那个字段传到后面算法中
            table-strategy: # 分表策略
              standard:
                sharding-algorithm-name: t-problem-table-inline
                sharding-column: id # 那个字段传到后面算法中
            key-generate-strategy: #  t_problem 表主键 id 生成的策略  https://blog.csdn.net/chinawangfei/article/details/114675854
              column: id  # t_order 表的主键id 需要使用雪花算法
              keyGeneratorName: t-problem-snowflake  # 关键这里修改后 似乎不生效，这是最离谱的，就是默认使用的是雪花算法
        key-generators:
          t-problem-snowflake:
            type: snowflake
            props:
              worker-id: 1
server:
  port: 10089

mybatis-plus:
  configuration:
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
  mapper-locations: classpath:cn/lp/dal/mapper/*.xml
  type-aliases-package: cn.lp.bean
